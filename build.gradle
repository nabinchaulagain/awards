plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "2.0.0"
    id 'org.liquibase.gradle' version '2.0.1'
}

version = "0.1"
group = "rltw.awards"

apply plugin: 'java'

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("rltw.awards.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation files("libs/ojdbc7.jar")
    implementation group: 'io.micronaut.data', name: 'micronaut-data-hibernate-jpa', version: '3.0.0'
    implementation group: 'io.micronaut.configuration', name: 'micronaut-jdbc-hikari', version: '2.2.6'
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    liquibaseRuntime 'org.liquibase:liquibase-core:3.6.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation "org.mindrot:jbcrypt:0.4"
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari"
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut.openapi:micronaut-openapi:3.2.0")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:3.2.0")
    implementation 'io.micronaut:micronaut-management:1.0.0'
    annotationProcessor('io.micronaut:micronaut-management:1.0.0')
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.135'
}


application {
    mainClass.set("rltw.awards.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}
